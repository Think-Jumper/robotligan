#version 440 core

out vec4 out_color;

in vec2 v_uv;

uniform sampler2D texture_color;
uniform sampler2D texture_emission;

float kernel[11*11] = {
0.000086,	0.00026,	0.000614,	0.001132,	0.001634,	0.001847,	0.001634,	0.001132,	0.000614,	0.00026,	0.000086,
0.00026,	0.000784,	0.001848,	0.003408,	0.00492,	0.005561,	0.00492,	0.003408,	0.001848,	0.000784,	0.00026,
0.000614,	0.001848,	0.004354,	0.00803,	0.011594,	0.013104,	0.011594,	0.00803,	0.004354,	0.001848,	0.000614,
0.001132,	0.003408,	0.00803,	0.014812,	0.021385,	0.02417,	0.021385,	0.014812,	0.00803,	0.003408,	0.001132,
0.001634,	0.00492,	0.011594,	0.021385,	0.030875,	0.034896,	0.030875,	0.021385,	0.011594,	0.00492,	0.001634,
0.001847,	0.005561,	0.013104,	0.02417,	0.034896,	0.03944,	0.034896,	0.02417,	0.013104,	0.005561,	0.001847,
0.001634,	0.00492,	0.011594,	0.021385,	0.030875,	0.034896,	0.030875,	0.021385,	0.011594,	0.00492,	0.001634,
0.001132,	0.003408,	0.00803,	0.014812,	0.021385,	0.02417,	0.021385,	0.014812,	0.00803,	0.003408,	0.001132,
0.000614,	0.001848,	0.004354,	0.00803,	0.011594,	0.013104,	0.011594,	0.00803,	0.004354,	0.001848,	0.000614,
0.00026,	  0.000784,	0.001848,	0.003408,	0.00492,	0.005561,	0.00492,	0.003408,	0.001848,	0.000784,	0.00026,
0.000086,	0.00026,	0.000614,	0.001132,	0.001634,	0.001847,	0.001634,	0.001132,	0.000614,	0.00026,	0.000086};

void main() {
	vec3 color = texture(texture_color, v_uv).rgb;

	vec3 sum = vec3(0);
	
	int size = 11;
	int hsize = size/2;
	for(int x = -hsize; x <= hsize; x++) {
		for(int y = -hsize; y <= hsize; y++) {
			int index = (x+hsize) + (y+hsize) * size;
			vec2 t = 1.0/textureSize(texture_emission, 0).xy;
			sum += kernel[index] * texture(texture_emission, v_uv + t*vec2(x,y)).rgb;
		}
	}

	color += sum;

	out_color = vec4(color, 1);
}